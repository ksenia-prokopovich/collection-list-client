{"version":3,"sources":["Components/Header/Header.js","Components/CollectionList/CollectionList.js","Components/Registration/Registration.js","utils/error-handler.js","Components/Login/Login.js","Components/Not-found/Not-found.js","Components/AddCollection/AddCollectionItem.js","Components/ItemCollections/ItemCollections.js","Components/CreateCollections/CreateCollections.js","Components/Comments/Comments.js","Components/ItemView/ItemView.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","user","JSON","parse","localStorage","getItem","onApplyTheme","setItem","this","document","body","className","removeItem","window","open","process","href","type","placeholder","id","firstname","onClick","onDark","bind","onLight","logOut","React","Component","CollectionList","collections","users","loadCollections","loadUsers","fetch","then","response","json","setState","event","target","value","method","headers","stringify","title","description","userId","length","find","collection","add","map","src","image","getUserFirstname","delete","Registration","email","password","htmlFor","onChange","firstnameChange","emailChange","passwordChange","create","handleErrors","ok","Error","status","Login","hasError","catch","role","singIn","NotFound","AddCollectionItem","collectionId","match","params","fileInput","createRef","loadCollectionItem","edit","item","reader","FileReader","readAsDataURL","current","files","onload","result","name","titleChange","rows","descriptionChange","ref","imageChange","onSave","ItemCollections","itemCollections","loadItemCollections","loadItemCollection","CreateCollections","loadItem","Comments","message","comments","loadComments","itemId","messageChange","addComment","getUserName","ItemView","createdAt","likes","loadLikes","Date","toDateString","hasLike","like","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0edb16a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.scss';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: JSON.parse(localStorage.getItem(\"user\"))\r\n        }\r\n        this.onApplyTheme();\r\n    }\r\n\r\n    onDark() {\r\n        localStorage.setItem('theme', 'dark');\r\n        this.onApplyTheme();\r\n    }\r\n\r\n    onLight() {\r\n        localStorage.setItem('theme', 'light');\r\n        this.onApplyTheme();\r\n    }\r\n\r\n    onApplyTheme() {\r\n        document.body.className = localStorage.getItem('theme') === 'dark' ? `theme-dark` : `theme-light`\r\n    }\r\n\r\n    logOut() {\r\n        localStorage.removeItem(\"user\")\r\n        window.open(process.env.PUBLIC_URL + '/#/sing-in', '_self')\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"collection-header\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <a className=\"navbar-brand\" href={process.env.PUBLIC_URL + \"/#/\"}>My collection</a>\r\n                <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                    <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                </form>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <div className=\"navbar-brand\">\r\n                        <p className=\"navbar-name\">{this.state.user && this.state.user.firstname} <a className=\"bi bi-person-circle\"> </a></p>\r\n                    </div>\r\n                    <ul className=\"user-nav\">\r\n                        <div className=\"dropdown\">\r\n                            <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenu2\"\r\n                                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\"><a className=\"bi bi-moon\"></a>\r\n                                Theme\r\n                            </button>\r\n                            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n                                <li><button className=\"dropdown-item\" type=\"button\" onClick={this.onDark.bind(this)}>Dark</button></li>\r\n                                <li><button className=\"dropdown-item\" type=\"button\" onClick={this.onLight.bind(this)}>Light</button></li>\r\n                            </ul>\r\n                        </div>\r\n                        {!this.state.user && <div className=\"auth-actions\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href={process.env.PUBLIC_URL + \"/#/sing-in\"}>Log In</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href={process.env.PUBLIC_URL + \"/#/sing-up\"}>Sing Up</a>\r\n                            </li>\r\n                        </div>}\r\n                        {this.state.user && <div>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" onClick={this.logOut.bind(this)}>Log Out</a>\r\n                            </li>\r\n                        </div>}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './CollectionList.scss';\r\n\r\n\r\nclass CollectionList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collections: [],\r\n            users: [],\r\n            user: JSON.parse(localStorage.getItem(\"user\")),\r\n        };\r\n        this.loadCollections();\r\n        this.loadUsers()\r\n    }\r\n\r\n    loadUsers() {\r\n        fetch('https://server-ergl.onrender.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ ...this.state, users }))\r\n    }\r\n\r\n    loadCollections() {\r\n        fetch('https://server-ergl.onrender.com/collections')\r\n            .then(response => response.json())\r\n            .then(collections => this.setState({...this.state, collections}))\r\n    }\r\n\r\n    collectionsChange(event) {\r\n        this.setState({\r\n            ...this.collections,\r\n            collections: event.target.value\r\n        });\r\n    }\r\n\r\n    delete(id) {\r\n        fetch('https://server-ergl.onrender.com/collections/delete/' + id, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(() => this.loadCollections())\r\n    }\r\n\r\n    add() {\r\n        fetch('https://server-ergl.onrender.com/collections/add', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({title: this.state.title, description: this.state.description}),\r\n        })\r\n            .then(() => {\r\n                window.open(process.env.PUBLIC_URL + \"/#/create-collections\", '_self')\r\n            });\r\n    }\r\n\r\n    getUserFirstname(userId) {\r\n        return userId && this.state.users.length && this.state.users.find(collection => collection.id === userId).firstname;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"collection-list container\">\r\n            {this.state.user &&\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={this.add.bind(this)}>Create...</button>}\r\n            {this.state.collections.map(collection => (\r\n                <div className=\"col\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{collection.title}</h5>\r\n                            <img src={collection.image}/>\r\n                            <p className=\"card-text\">{collection.description}</p>\r\n                            <span className=\"card-author\">Author: {this.getUserFirstname(collection.userId)} <a className=\"bi bi-person-circle\"> </a></span>\r\n                            <div className=\"actions\">\r\n                                {this.state.user && this.state.user.id === collection.userId && <button type=\"button\" className=\"btn btn-danger\"\r\n                                                            onClick={() => this.delete(collection.id)}>Delete</button>}\r\n                                <a href={process.env.PUBLIC_URL + \"/#/\" + collection.id + \"/edit-collection\"}>\r\n                                    {this.state.user && this.state.user.id === collection.userId && <button type=\"button\" className=\"btn btn-link\">Edit</button>}\r\n                                </a>\r\n                                <a className=\"card-link list-link\" href={process.env.PUBLIC_URL + \"/#/\" + collection.id + \"/items\"}>All\r\n                                    collection...</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default CollectionList;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Registration.scss';\r\n\r\n\r\nclass Registration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    create(){\r\n        fetch('https://server-ergl.onrender.com/users/sing-up', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({firstname: this.state.firstname, email: this.state.email, password: this.state.password}),\r\n        })\r\n            .then(() => {\r\n                window.open(process.env.PUBLIC_URL + `/#/sing-in`, '_self');\r\n            });\r\n    }\r\n\r\n    firstnameChange(event) {\r\n        this.setState({\r\n            ...this.state,\r\n            firstname: event.target.value\r\n        });\r\n    }\r\n\r\n    emailChange(event) {\r\n        this.setState({\r\n            ...this.state,\r\n            email: event.target.value\r\n        });\r\n    }\r\n\r\n    passwordChange(event) {\r\n        this.setState({\r\n            ...this.state,\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div className='registration container'>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputName1\" className=\"form-label\">Name</label>\r\n                    <input type=\"text\" value={this.state.firstname} onChange={this.firstnameChange.bind(this)} className=\"form-control\" id=\"exampleInputName1\" placeholder=\"Enter name\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                    <input type=\"email\" value={this.state.email} onChange={this.emailChange.bind(this)} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                    <input type=\"password\" value={this.state.password} onChange={this.passwordChange.bind(this)} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Enter password\"/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-secondary\" onClick={this.create.bind(this)}>Sing Up</button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Registration;\r\n","export function handleErrors(response) {\r\n    if (!response.ok) throw new Error(response.status);\r\n    return response;\r\n}\r\n","import React from 'react';\r\nimport './Login.scss';\r\nimport {handleErrors} from \"../../utils/error-handler\";\r\n\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    singIn() {\r\n        fetch('https://server-ergl.onrender.com/users/sing-in', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: this.state.email, password: this.state.password}),\r\n        })\r\n            .then(response => handleErrors(response))\r\n            .then(response => response.json())\r\n            .then((response) => {\r\n                localStorage.setItem(\"user\", JSON.stringify(response))\r\n                window.open(process.env.PUBLIC_URL + '/#/', '_self')\r\n            })\r\n            .catch(() => {\r\n                this.setState({ ...this.state, hasError: true })\r\n            })\r\n    }\r\n\r\n    emailChange(event) {\r\n        this.setState({\r\n            ...this.state,\r\n            email: event.target.value\r\n        });\r\n    }\r\n\r\n    passwordChange(event) {\r\n        this.setState({\r\n            ...this.state,\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div className='login container'>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                    <input type=\"email\" value={this.state.email} onChange={this.emailChange.bind(this)} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                    <input type=\"password\" value={this.state.password} onChange={this.passwordChange.bind(this)} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Enter password\"/>\r\n                </div>\r\n                {this.state.hasError && (<div className=\"alert alert-danger\" role=\"alert\">\r\n                    Your email or password is incorrect!</div>)}\r\n                <button type=\"submit\" className=\"btn btn-secondary\" onClick={this.singIn.bind(this)}>Sing In</button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nclass NotFound extends React.Component {\r\n\r\n    render() {\r\n        return <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"error-template\">\r\n                        <h1>\r\n                            Oops!</h1>\r\n                        <h2>\r\n                            404 Not Found</h2>\r\n                        <div className=\"error-details\">\r\n                            Sorry, an error has occured, Requested page not found!\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    };\r\n}\r\n\r\n\r\nexport default NotFound\r\n","import React from 'react';\r\nimport './AddCollectionItem.scss';\r\nimport {handleErrors} from \"../../utils/error-handler\";\r\n\r\n\r\nclass AddCollectionItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            description: '',\r\n            userId: JSON.parse(localStorage.getItem('user')).id,\r\n            collectionId: props.match.params.collectionId,\r\n            id: props.match.params.id,\r\n            fileInput: React.createRef(),\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.state.id) {\r\n            this.loadCollectionItem()\r\n        }\r\n    }\r\n\r\n    add() {\r\n        fetch('https://server-ergl.onrender.com/collections/items/add', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                description: this.state.description,\r\n                image: this.state.image,\r\n                collectionId: this.state.collectionId,\r\n                userId: this.state.userId,\r\n            }),\r\n        })\r\n            .then(() => {\r\n                window.open(process.env.PUBLIC_URL + `/#/${this.state.collectionId}/items`, '_self')\r\n            });\r\n    }\r\n\r\n    edit() {\r\n        fetch('https://server-ergl.onrender.com/collections/items/edit-items/' + this.state.id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                description: this.state.description,\r\n                image: this.state.image,\r\n            }),\r\n        })\r\n            .then(response => handleErrors(response))\r\n            .then(() => {\r\n                window.open(process.env.PUBLIC_URL + `/#/${this.state.collectionId}/items`, '_self')\r\n            });\r\n    }\r\n\r\n    onSave() {\r\n        if (this.state.id) {\r\n            this.edit();\r\n        } else {\r\n            this.add();\r\n        }\r\n    }\r\n\r\n\r\n    loadCollectionItem() {\r\n        fetch('https://server-ergl.onrender.com/collections/items/' + this.state.id)\r\n            .then(response => response.json())\r\n            .then(item => this.setState({...this.state, ...item}))\r\n    }\r\n\r\n    titleChange(event) {\r\n        this.setState({\r\n            ...this.state,\r\n            title: event.target.value\r\n        });\r\n    }\r\n\r\n    descriptionChange(event) {\r\n        this.setState({\r\n            ...this.state,\r\n            description: event.target.value\r\n        });\r\n    }\r\n\r\n    imageChange() {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(this.state.fileInput.current.files[0]);\r\n        reader.onload = () => {\r\n            this.setState({\r\n                image: reader.result\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <div className=\"form-collection container\">\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleInputTitle\">Title</label>\r\n                <input type=\"text\" value={this.state.title} className=\"form-control\" id=\"exampleInputTitle\"\r\n                       name=\"title\" onChange={this.titleChange.bind(this)}/>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleInputDescription\">Description</label>\r\n                <textarea rows=\"5\" value={this.state.description} className=\"form-control\" id=\" exampleInputTitle\"\r\n                          name=\" content\" onChange={this.descriptionChange.bind(this)}/>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleInputDescription\">Description</label>\r\n                <input ref={this.state.fileInput} type=\"file\" className=\"form-control\"\r\n                       name=\"title\" onChange={this.imageChange.bind(this)}/>\r\n            </div>\r\n            <button type=\"submit\" className=\" btn btn-secondary\" onClick={this.onSave.bind(this)}>Save</button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default AddCollectionItem;\r\n","import React from 'react';\r\nimport './ItemCollections.scss';\r\n\r\n//import {handleErrors} from \"../../utils/error-handler\";\r\n\r\nclass ItemCollections extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            itemCollections: [],\r\n            collection: [],\r\n            collectionId: props.match.params.collectionId,\r\n            user: JSON.parse(localStorage.getItem(\"user\")),\r\n            userId: localStorage.getItem('user') && JSON.parse(localStorage.getItem('user')).id,\r\n            users: [],\r\n        };\r\n        this.loadItemCollections();\r\n        this.loadItemCollection();\r\n        this.loadUsers();\r\n    }\r\n\r\n    loadUsers() {\r\n        fetch('https://server-ergl.onrender.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ ...this.state, users }))\r\n    }\r\n\r\n    loadItemCollection() {\r\n        fetch(`https://server-ergl.onrender.com/collections/${this.state.collectionId}`)\r\n            .then(response => response.json())\r\n            .then(collection => this.setState({...this.state, collection}))\r\n    }\r\n\r\n    loadItemCollections() {\r\n        fetch(`https://server-ergl.onrender.com/collections/items/${this.state.collectionId}/list`)\r\n            .then(response => response.json())\r\n            .then(itemCollections => this.setState({...this.state, itemCollections}))\r\n    }\r\n\r\n    delete(id) {\r\n        fetch('https://server-ergl.onrender.com/collections/items/delete/' + id, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(() => this.loadItemCollections())\r\n    }\r\n\r\n    getUserFirstname(userId) {\r\n        return userId && this.state.users.length && this.state.users.find(item => item.id === userId).firstname;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"collection-item-list\">\r\n            <a href={process.env.PUBLIC_URL + \"/#/\" + this.state.collectionId + \"/add\"}>\r\n                {this.state.user && this.state.user.id === this.state.collection.userId && <button type=\"button\" className=\"btn btn-secondary -add\">Add</button>}\r\n            </a>\r\n            {this.state.itemCollections.map(item =>\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"row g-0\">\r\n                        <div className=\"card-body-list\">\r\n                            <div>\r\n                                <div className=\"card-body\">\r\n                                    <a href={process.env.PUBLIC_URL + \"/#/\" + this.state.collectionId + \"/items/\" + item.id}><h5\r\n                                        className=\"card-title\" title={item.title}>{item.title}</h5></a>\r\n                                    <img src={item.image}/>\r\n                                    <p className=\"card-text\">{item.description}</p>\r\n                                </div>\r\n                                {this.state.user && this.state.user.id === item.userId && <div className=\"actions\">\r\n                                    <button type=\"button\" className=\"btn btn-danger\"\r\n                                            onClick={() => this.delete(item.id)}>Delete\r\n                                    </button>\r\n                                    <a href={process.env.PUBLIC_URL + \"/#/\" + item.id + \"/edit-items\"}>\r\n                                        <button type=\"button\" className=\"btn btn-link\">Edit</button>\r\n                                    </a>\r\n                                    <span className=\"card-author\">Author: {this.getUserFirstname(item.userId)} <a className=\"bi bi-person-circle\"> </a></span>\r\n\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default ItemCollections;\r\n","import React from 'react';\r\nimport './CreateCollections.scss';\r\nimport {handleErrors} from \"../../utils/error-handler\";\r\n\r\nclass CreateCollections extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            title: '',\r\n            description: '',\r\n            fileInput: React.createRef(),\r\n        }\r\n\r\n        if (this.state.id) {\r\n            this.loadItem()\r\n        }\r\n    }\r\n\r\n    onSave() {\r\n        if (this.state.id) {\r\n            this.edit();\r\n        } else {\r\n            this.add();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        fetch('https://server-ergl.onrender.com/collections/add', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                description: this.state.description,\r\n                image: this.state.image,\r\n                userId: JSON.parse(localStorage.getItem('user')).id\r\n            }),\r\n        })\r\n            .then(() => {\r\n                window.open(process.env.PUBLIC_URL + `/#/`, '_self');\r\n            });\r\n    };\r\n\r\n    edit() {\r\n        fetch('https://server-ergl.onrender.com/collections/edit-collection/' + this.state.id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                description: this.state.description,\r\n                image: this.state.image,\r\n            }),\r\n        })\r\n            .then(response => handleErrors(response))\r\n            .then(() => {\r\n                window.open(process.env.PUBLIC_URL + \"/#/\", '_self')\r\n            });\r\n    }\r\n\r\n    loadItem() {\r\n        fetch('https://server-ergl.onrender.com/collections/' + this.state.id)\r\n            .then(response => response.json())\r\n            .then(item => this.setState({...this.state, ...item}))\r\n    }\r\n\r\n    titleChange(event) {\r\n        this.setState({\r\n            ...this.state,\r\n            title: event.target.value\r\n        });\r\n    }\r\n\r\n    descriptionChange(event) {\r\n        this.setState({\r\n            ...this.state,\r\n            description: event.target.value\r\n        });\r\n    }\r\n\r\n    imageChange() {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(this.state.fileInput.current.files[0]);\r\n        reader.onload = () => {\r\n            this.setState({\r\n                image: reader.result\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <div className=\"form-collection container\">\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleInputTitle\">Title</label>\r\n                <input type=\"text\" value={this.state.title} className=\"form-control\" id=\"exampleInputTitle\"\r\n                       name=\"title\" onChange={this.titleChange.bind(this)}/>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleInputDescription\">Description</label>\r\n                <textarea rows=\"5\" value={this.state.description} className=\" form-control\" id=\" exampleInputTitle\"\r\n                          name=\" content\" onChange={this.descriptionChange.bind(this)}/>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleInputDescription\">Description</label>\r\n                <input ref={this.state.fileInput} type=\"file\" className=\"form-control\"\r\n                       name=\"title\" onChange={this.imageChange.bind(this)}/>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-secondary\" onClick={this.onSave.bind(this)}>Save</button>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default CreateCollections;\r\n","import React from 'react';\r\nimport './Comments.scss';\r\n\r\n//import {handleErrors} from \"../../utils/error-handler\";\r\n\r\nclass Comments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: props.id,\r\n            message: '',\r\n            comments: [],\r\n            users: [],\r\n            userId: localStorage.getItem('user') && JSON.parse(localStorage.getItem('user')).id,\r\n            user: JSON.parse(localStorage.getItem(\"user\"))\r\n        }\r\n        this.loadComments();\r\n        this.loadUsers();\r\n    }\r\n\r\n    loadComments() {\r\n        fetch(`https://server-ergl.onrender.com/collections/items/comments/${this.state.id}`)\r\n            .then(response => response.json())\r\n            .then(comments => this.setState({...this.state, comments}))\r\n    }\r\n\r\n    addComment() {\r\n        fetch(`https://server-ergl.onrender.com/collections/items/comments/create`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                message: this.state.message,\r\n                itemId: this.state.id,\r\n                userId: JSON.parse(localStorage.getItem('user')).id,\r\n            }),\r\n        })\r\n            //.then((response => handleErrors(response)))\r\n            .then(() => {\r\n                this.setState({ message: ''});\r\n                this.loadComments();\r\n            });\r\n    }\r\n\r\n    messageChange(event) {\r\n        this.setState({\r\n            ...this.state,\r\n            message: event.target.value\r\n        });\r\n    }\r\n\r\n    delete(id) {\r\n        fetch('https://server-ergl.onrender.com/collections/items/comments/delete/' + id, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(() => this.loadComments())\r\n    }\r\n\r\n    loadUsers() {\r\n        fetch('https://server-ergl.onrender.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ ...this.state, users }))\r\n    }\r\n\r\n    getUserName(userId) {\r\n        return userId && this.state.users.length && this.state.users.find(item => item.id === userId).firstname;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"collection-comment\">\r\n            <div>\r\n                <div className=\"mb-3-comment\">\r\n                    <label htmlFor=\"formGroupExampleInput\" className=\"form-label\">Comments</label>\r\n                    <input type=\"text\" value={this.state.message} className=\"form-control\" placeholder=\"Enter your comment\" onChange={this.messageChange.bind(this)}/>\r\n                </div>\r\n                <div className=\"actions-comment\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.addComment.bind(this)}>Send</button>\r\n                </div>\r\n            </div>\r\n            {this.state.comments.map(item =>\r\n                <div className=\"card-body-comment\">\r\n                    <h5 className=\"card-title\">\r\n                        {this.state.user && this.state.user.id === item.userId && <button type=\"button\" className=\"btn btn-outline-danger trash\" onClick={() => this.delete(item.id)}>\r\n                            <i className=\"bi bi-trash\"> </i>\r\n                        </button>}\r\n                        <span className=\"user-name\">{this.getUserName(item.userId)} <a className=\"bi bi-person-circle\"> </a></span>\r\n                    </h5>\r\n                    <p className=\"card-text\">{item.message}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default Comments;\r\n","import React from 'react';\r\nimport './ItemView.scss';\r\nimport Comments from \"../Comments/Comments\";\r\n\r\nclass ItemView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            description: '',\r\n            createdAt: '',\r\n            userId: localStorage.getItem('user') && JSON.parse(localStorage.getItem('user')).id,\r\n            id: props.match.params.id,\r\n            collectionId: props.match.params.collectionId,\r\n            likes: [],\r\n            users: [],\r\n            user: JSON.parse(localStorage.getItem('user'))\r\n        };\r\n        this.loadUsers();\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.state.id) {\r\n            this.loadItem();\r\n            this.loadLikes();\r\n        }\r\n    }\r\n\r\n    loadItem() {\r\n        fetch(`https://server-ergl.onrender.com/collections/items/${this.state.id}`)\r\n            .then(response => response.json())\r\n            .then(item => this.setState({...this.state, ...item}));\r\n    }\r\n\r\n    delete(id) {\r\n        fetch('https://server-ergl.onrender.com/collections/items/delete/' + id, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(() => {\r\n                window.open(process.env.PUBLIC_URL + `/#/${this.state.collectionId}/items`, '_self');\r\n            })\r\n    }\r\n\r\n    like() {\r\n        fetch('https://server-ergl.onrender.com/collections/items/like', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.state.userId,\r\n                itemId: this.state.id\r\n            })\r\n        })\r\n            .then(() => this.loadLikes());\r\n    }\r\n\r\n    hasLike(userId) {\r\n        return userId && this.state.likes.length && this.state.likes.find(item => item.userId === userId);\r\n    }\r\n\r\n    loadLikes() {\r\n        fetch(`https://server-ergl.onrender.com/collections/items/likes/${this.state.id}`)\r\n            .then(response => response.json())\r\n            .then(likes => this.setState({likes}))\r\n    }\r\n\r\n    getUserFirstname(userId) {\r\n        return userId && this.state.users.length && this.state.users.find(item => item.id === userId).firstname;\r\n    }\r\n\r\n    loadUsers() {\r\n        fetch('https://server-ergl.onrender.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ ...this.state, users }))\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"collection-item-view\">\r\n                <div className=\"card mb-3\">\r\n                <div className=\"row g-0\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\" title={this.state.title}>{this.state.title}</h5>\r\n                        <img src={this.state.image}/>\r\n                        <p className=\"card-text\">{this.state.description}</p>\r\n                        <div className=\"card-author\">\r\n                            <span className=\"card-author\">Author: {this.getUserFirstname(this.state.userId)} <a className=\"bi bi-person-circle\"> </a></span>\r\n                            <p className=\"card-text-date\">{new Date(this.state.createdAt).toDateString()}</p>\r\n                        </div>\r\n                        <div className=\"actions\">\r\n                            {this.state.user && this.state.user.id === this.state.userId && <div className=\"actions2\">\r\n                                <a href={process.env.PUBLIC_URL + \"/#/\" + this.state.id + \"/edit-items\"}><i className=\"bi bi-gear-fill\"> </i></a>\r\n                                <i className=\"bi bi-trash\" onClick={() => this.delete(this.state.id)}> </i>\r\n                            </div>}\r\n                            {this.state.user &&\r\n                            <i className={this.hasLike(this.state.userId) ? 'bi bi-heart-fill -active' : 'bi bi-heart-fill'}\r\n                               onClick={this.like.bind(this)}>{this.state.likes.length}</i>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            {this.state.user && <Comments id={this.state.id}/>}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default ItemView;\r\n","import React from 'react';\nimport './App.scss';\nimport { HashRouter as Router } from 'react-router-dom'\nimport Header from './Components/Header/Header';\nimport { Switch, Route } from 'react-router-dom';\nimport CollectionList from \"./Components/CollectionList/CollectionList\";\nimport Registration from \"./Components/Registration/Registration\";\nimport Login from \"./Components/Login/Login\";\nimport NotFound from \"./Components/Not-found/Not-found\";\nimport AddCollectionItem from \"./Components/AddCollection/AddCollectionItem\";\nimport ItemCollections from \"./Components/ItemCollections/ItemCollections\";\nimport CreateCollections from \"./Components/CreateCollections/CreateCollections\";\nimport ItemView from \"./Components/ItemView/ItemView\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: localStorage.getItem('user')\n        }\n    }\n\n    render() {\n        return <div className=\"content\">\n            <Header/>\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route exact path=\"/\" component={CollectionList}/>\n                    <Route exact path=\"/:collectionId/items\" component={ItemCollections}/>\n                    {!this.state.user && <Route path=\"/sing-up\" component={Registration}/>}\n                    {!this.state.user && <Route path=\"/sing-in\" component={Login}/>}\n                    {this.state.user && <Route path=\"/:collectionId/add\" component={AddCollectionItem}/>}\n                    <Route path=\"/:collectionId/items/:id\" component={ItemView}/>\n                    {this.state.user && <Route path=\"/create-collections\" component={CreateCollections}/>}\n                    {this.state.user && <Route path=\"/:id/edit-collection\" component={CreateCollections}/>}\n                    {this.state.user && <Route path=\"/:id/edit-items\" component={AddCollectionItem}/>}\n                    <Route component={NotFound}/>\n                </Switch>\n            </Router>\n        </div>\n    };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}